//기능구현
2. 서버 배포 //////////// cicd로 배포 자동화
15.공유 ////////////
30.30개 로딩하고 추가 로딩 버튼(limit select 만들기)
42.아키텍처 및 cs 응용, 조회수를 정렬에도 추가
84.회원 가입 시 이메일 인증 -> 후순위
86.사용자 설정도 user table에 저장(테마), 로그인 시점에 적용
93.회원가입하면 자동 로그인? 또 리다이렉트가 회원가입 페이지로 안가게 조절
95.추천수 구현(유저만 가능)
96.북마크 줄 나누는 매서드 구현
99.필터링 검색 기능 구현(ex 상세페이지 조회수 몇 이상, 신뢰점수 몇 이상)
100.통합 검색 매서드 구현
101.구독비 결제기능 구현
107.페이지 정보, 조회수, 북마크 수 표시
118.Spring-Ai framework
120.한꺼번에 여러개 추가, llm 비활성화 기능 추가
122.목차에 주석은 표시 안되게 변경
123.출석 체크
125.grupby sql, v라이프사이클 기능 단위 브랜치를 나눠 작업
128.점수 기준 바꿀떄 재계산도
130.효과 태그 끼리 관계 (길항, 포함)
135.캡차
136.비트마스킹
139.쿠팡 파트너스
140.구축
141. 채팅상담, 지도 . erd와 usecase
147.ㅆㄷ 크롤러 만들기
152.쿠폰 스케쥴러 불안정함
154.sqld, 정처기 따기
160.jse 점수 정규화
162.장바구니에 할인쿠폰 적용
166.도로명주소 찾기 기능 구현
167.광고 팝업
168.성분 수정 시에 사용자 정보 보관
174.성분당 논문인용횟수 표시
175.전역변수 피하기
177.성분 추가하면 ai가 detail 초안 자동 작성
178.알람 읽음 등은 modify로 처리
179.최신 업데이트 페이지 및 성분 띄우기
180.ctp
181.트러블 슈팅 작성하기 ex)필터링 더보기 여러번 클릭
184.정렬기준은 그대로, 조건문 추가하기(ex 점수 100이상, 제목순)
185.서브쿼리 이ㅐㅎ
186.백엔드에서 옵셋 받기
187.blind 0,1,2로 바꾸기
188.유사도검사 논문 매서드 추가, 태그는 한글 검색 추가
189.쿠폰할인율 적용

//
// 이해


//js

1. 변수 복사시 기본으로 참조복사하기에 const a = [...b]; 이런식의 전개연산자필요
3. 로컬스토리지는 js 테마색 같은 정보) 빠르고 지속 무한./ 쿠키는 민감 정보) 느리고 세션 만료 있지만 보안 있음
//java


//이전
필요 프로그램:intelji, jdk, mysql workbrench

//코테

시간초과 나면 이분탐색, dp
시간복잡도 같아도 vector가 더 빠를 수 있음 (vector > map > unordered_map)
재귀, dp는 기본적으로 설계한 점화식을 어떻게든 구현했다고 치고 박치기

// 규칙
// 프론트
html,css,js 역할 분담 명확히(하드 코딩 최소화(이미지 등 예외처리등에만 스타일 국소 적용)
모듈화(중복되는 js 함수, html 코드 따로 분리 후 import, css 주기적으로 정리, html 재사용)
재귀함수 아닌 이상 함수모듈화 아무리 해도 자원소모 거의 없음
html에서 기본 로딩(네비게이션바, 스크롤 버튼 등)은 <div id="load-basic>
목차는 index-n 내용은 content-n으로 id 설정(스크롤 및 폴드용)

백엔드
컨트롤러, dto, entity, repository, service로 역할 분담(간단한 것도 일괄 분리)
모듈화(service에 크롤링 등 함수 저장)
repository로 db 조회하는건 리소스가 크므로 반복문으로 조회하지 않고 전부 하나의 리스트로
합치고 한번에 조회

설계디자인 태그는 A+보다 A의 우선순위가 높은 관계 일단 id 순으로 정렬했으나 후처리
내 프로젝트에서 가장 중요한건 테이블 간의 연결성:
   논문에 성분, 효과가 티어와 함께 매핑(티어는 논문 연구 설계 가중치, 표본 개수, 기간 등으로 점수계산 및 알파벳 등급 변환)
-> 해당 성분에 논문 효과들 전부 삽입
-> 성분-효과 매핑 테이블엔 기존 티어(int 점수)들의 총합과 티어의 개수가 저장
-> 공식에 따라 성분별 종합 티어 자동 계산(메타분석 긍정, 코호트 부정일 경우 메타분석 우선하는식으로 가중치 부여)
테이블끼리 긴밀하게 영향을 주는 것이 다른 crud 게시판과의 가장 큰 차이점

종합 티어를 계산할 때 쿼리 수준에서 처리할지, 아니면 정기적 배치 연산으로 반영할지

논문-성분-효과 3자 관계를 단일 매핑 테이블로 만들지, journal_effect, supplement_effect, journal_supplement_effect 같이 분리할지

슬슬 대화가 길어져서 로딩이 오래 걸리는데 다음 gpt를 위한 프롬포트를 써서 이 대화 내용을 이어나갈 수 있게 해줘. 정리된 전체적인 프로젝트 개요와 구조를 다음 GPT에게도 이해될 수 있도록 설명해 그걸 내가 복사해서 붙여넣을테니

